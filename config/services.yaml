# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    private_key_path: 'file://%kernel.project_dir%/%env(JWT_PRIVATE_KEY_PATH)%'
    public_key_path:  'file://%kernel.project_dir%/%env(JWT_PUBLIC_KEY_PATH)%'
    pass_phrase:      '%env(JWT_PASSPHRASE)%'

    crypto_engine: 'OpenSSL'
    signature_algorithm: 'RS256'
    token_ttl: ~

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    App\Action\:
        resource: '../src/Action'
        public: true
        tags: ['controller.service_arguments']

    App\Repository\UserRepositoryInterface: 
        class: App\Repository\DoctrineUserRepository
    
    App\Service\JWTEncoderService:
        arguments:
            $cryptoEngine: '%crypto_engine%'
            $signatureAlgorithm: '%signature_algorithm%'
            $ttl: '%token_ttl%'

    App\Service\KeyLoaderService:
        arguments:
            $privateKeyPath: '%private_key_path%'
            $publicKeyPath: '%public_key_path%'
            $passphrase: '%pass_phrase%'
